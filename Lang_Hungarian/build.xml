<project name="Lang_Hungarian" default="dist" basedir=".">
  <description>
    GATE Resources for Hungarian
  </description>

  <!-- Prevent Ant from warning about includeantruntime not being set -->
  <property name="build.sysclasspath" value="ignore" />

  <!-- Use shell environment variables: ${env.USER} etc. -->
  <property environment="env" />

  <!-- set gate.home property from shell env var GATE_HOME: -->
  <property name="gate.home" value="${env.GATE_HOME}" />

  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="bin"/>
  <property name="dist"  location="dist"/>
  <property name="jar.location" location="hungarian.jar" />
  <property name="doc.dir" location="doc" />
  <property name="javadoc.dir" location="${doc.dir}/javadoc" />

  <property name="gate.jar" location="${gate.home}/bin/gate.jar" />
  <property name="gate.lib" location="${gate.home}/lib" />
  <property name="gate.compile.maxwarnings" value="10000" />

  <property name="resources.dir" location="resources" />
  <property name="magyarlanc-2.0.jar" location="${resources.dir}/magyarlanc/magyarlanc-2.0.1.jar" />


  <path id="classpath">
    <pathelement location="${gate.jar}" />
    <fileset dir="${gate.lib}">
      <include name="**/*.jar" />
      <include name="**/*.zip" />
    </fileset>
    <pathelement location="${dummyctokenizerwrapper.jar}" />
    <pathelement location="${magyarlanc-2.0.jar}" />
    <!--fileset dir="lib"> 
      <include name="*.jar"/>
    </fileset-->
  </path> 

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
	  description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" debug="true" source="1.7" target="1.7">
      <classpath refid="classpath"/>
      <compilerarg value="-Xmaxwarns" />
      <compilerarg value="${gate.compile.maxwarnings}" />
      <compilerarg value="-Xlint:all" />
    </javac>
  </target>

  <!-- Build JavaDoc documentation -->
  <target name="doc.prepare">
    <mkdir dir="${javadoc.dir}" />
  </target>

  <target name="javadoc" depends="doc.prepare">
    <javadoc destdir="${javadoc.dir}" packagenames="*"
             classpathref="classpath"
             encoding="UTF-8"
             windowtitle="${plugin.name} JavaDoc"
             source="1.7">
      <sourcepath>
        <pathelement location="${src}" />
      </sourcepath>
      <link href="http://docs.oracle.com/javase/6/docs/api/" />
      <link href="http://gate.ac.uk/gate/doc/javadoc/" />
    </javadoc>
  </target>


  <target name="dist" depends="compile"
	  description="generate the distribution" >
    <!-- Create the distribution directory -->
    <!--mkdir dir="${dist}/lib"/-->

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <!-- ...but exclude TemplatePR.class -->
    <jar jarfile="${jar.location}" basedir="${build}" excludes="**/TemplatePR.class"/>

    <!-- Delete the ${build} and ${dist} directory trees -->
    <!-- XXX átmásolva a "clean.classes"-ból
         XXX minek is kellett a dist dir egyáltalán? -->
    <!-- delete dir="${build}"/ -->
    <!--delete dir="${dist}"/-->
  </target>

  <target name="clean.classes"
	  description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <target name="clean" depends="clean.classes" >
    <!-- full clean also removes the generated JAR file -->
    <delete file="${jar.location}" />
  </target>

  <!-- Targets used by the main GATE build file -->
  <target name="build" depends="dist" />
  <target name="test" />
  <target name="distro.prepare" depends="clean.classes" />
</project>
